version: '3'

services:
  mysql:
    image: mysql
    container_name: mysql
    #Sets the mysql port that need to be exposed as per (machine port : container port).
    ports:
      - 3307:3306
    #Sets environment variables required for the container in the 'staging.env' file.
    env_file:
      - staging.env    
    #Sets the volume as per (src : dest) ,src can be any location in the users/remote machine ,data can be persisted at this location.
    volumes:
      - mysql_data:/var/lib/mysql 

  nodeapp:
    depends_on:
      - mysql
    image: nodeapp
    container_name: nodeapp
    #Sets the mysql port that need to be exposed as per (machine port : container port).
    ports:
      - 3000:5000
    #Sets environment variables required for the container in the staging.env file
    env_file:
      - staging.env   
    #Sets the volume as per (src : dest) ,src can be any location in the users/remote machine ,logs can be persisted at this location.
    volumes:
      - web_portal_logs:/home/DragsterBackendApp/log
    #Sets a link between nodeapp and mysql which lets nodeapp interact with mysql port.
    links:
      - mysql:mysql
    #On container startup for node app following command will be executed(in this case the command toi startup the app is executed)
    command: node ./bin/start  
    restart: always

volumes:
    #Mount volumes for the mysql data.
    mysql_data:
    #Mount volumes for the node app logs.
    web_portal_logs:  

#Creates the default bridge network {appname}_default and add the services to it.
#networks:


